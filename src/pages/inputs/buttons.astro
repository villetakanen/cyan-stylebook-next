---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="CDS / Inputs / Buttons">
  <main class="bookLayout">
    <!-- intro card -->
    <article class="Column small">
      <cyan-card elevation="1">
        <h4 slot="title">Buttons</h4>
        <cyan-icon slot="avatar" noun="d20" />
        <p class="TypeBody2">The humble button</p>
      </cyan-card>
    </article>

    <!-- Core components -->
    <article class="Column">
      <h1>The Basics</h1>

      <p>Buttons are used to trigger actions. They are used to submit forms, open
        dialogs, cancel actions, or perform a delete action.</p>

      <p>They can be used as part of a navigation to a wizard, or modal page (with a back-button).
        Notably: search engines will not crawl to the pages behind an onclick event of a button (which
        can be used to soft-hide modal forms and the like).
      </p>

      <h2>Examples</h2>
      <section class="fieldset">
      <cyan-toolbar>
        <p><cyan-code>{'<button>'}</cyan-code></p>
        <button>Plain</button>
        <button>
          noun+text
          <cyan-icon dark noun="d20" />
        </button>
        <button aria-label="d6">
          <cyan-icon dark noun="d6"/>
        </button>
      </cyan-toolbar>
      
      <cyan-toolbar>
        <p><cyan-code>.secondary</cyan-code></p>
        <button class="secondary">Plain</button>
        <button class="secondary">
          noun+text
          <cyan-icon noun="d20" dark/>
        </button>
        <button class="secondary" aria-label="d6">
          <cyan-icon noun="d6" dark/>
        </button>
      </cyan-toolbar>
        
      <cyan-toolbar>
        <p><cyan-code>.text</cyan-code></p>
        <button class="text">Plain</button>
        <button class="text">
          noun+text
          <cyan-icon noun="d20" />
        </button>
        <button class="text" aria-label="d6">
          <cyan-icon noun="d6"/>
        </button>
      </cyan-toolbar>

      <button class="compact">A compact button</button>

      <h3>Styled links</h3>
      <p>As ARIA readers work better with links than buttons for transitions to off-page, 
        it's recommended to use <cyan-code>{'<a class="button">'}</cyan-code> tags for links.</p>
      </p>
      
      <div class="flex">
        <a class="button" href="#">Plain</a>
        <a class="button" href="#">
          noun+text
          <cyan-icon noun="d20" />
        </a>
        <a class="button" href="#" aria-label="d6">
          <cyan-icon noun="d6"/>
        </a>
      </div>

      <div class="flex">
        <a class="button secondary" href="#">Plain</a>
        <a class="button secondary" href="#">
          noun+text
          <cyan-icon noun="d20" />
        </a>
        <a class="button secondary" href="#" aria-label="d6">
          <cyan-icon noun="d6"/>
        </a>
      </div>

      <div class="flex">
        <a class="button text" href="#">Plain</a>
        <a class="button text" href="#">
          noun+text
          <cyan-icon noun="d20" />
        </a>
        <a class="button text" href="#" aria-label="d6">
          <cyan-icon noun="d6"/>
        </a>
      </div>

      </section>


      <h2>Icons in buttons</h2>
      <p>Buttons support <cyan-code>{'<cyan-icon [small]>'}</cyan-code> (default or small size). The recommended
        icon size for buttons with text is <cyan-code>small</cyan-code>.</p>

      <toolbar>
        <button>
          <cyan-icon noun="d20" />
        </button>
        <button>
          <cyan-icon noun="d20" small />
        </button>
        <button class="secondary">
          <cyan-icon noun="d20" small />
          Secondary
        </button>
      </toolbar>
    </article>

     <!-- Reactions -->
     <article class="Column">
      <h2>Reactions</h2>
      <p>Reaction buttons <cyan-code>{'<cn-reaction-button noun=[loves] [count:number] [disabled] aria-pressed=[] />'}</cyan-code>
        are used for social reactions, like "like", etc. The button has three states: disabled,
        pressed and unpressed: represented by attributes <cyan-code>disabled</cyan-code>, and the value of
        <cyan-code>aria-pressed</cyan-code> respectively.</p>
      
      <h3>Demo</h3>
      <cyan-toolbar>
        <cn-reaction-button />
        <cn-reaction-button count="0" />
        <cn-reaction-button noun="download" count="713"/>
      </cyan-toolbar>

      <h3>Usage</h3>

      <p>Expects to be encapsulated in a <cyan-code>{'<cyan-toolbar>'}</cyan-code> component, but will likely
        work well in any flex-box or grid style container.</p>

      <h4>Events</h4>
      <p>A standard <cyan-code>change</cyan-code> event is dispatched on a reaction. The components listening
        for the event, should use the <cyan-code>aria-pressed</cyan-code> prop for the reaction value.</p>

      <p><strong>Code:</strong><br>
        <cyan-code>const value = (event.target as CyanReactionButton).ariaPressed</cyan-code></p>

      <h4>Attributes</h4>
      <p><cyan-code>noun</cyan-code> <i>optional</i> noun for a cyan-icon. Defaults to 'loves'.</p>
      <p><cyan-code>disabled</cyan-code> as a button:disabled.</p>
      <p><cyan-code>aria-pressed</cyan-code> as a button:aria-pressed.</p>
      <p><cyan-code>count</cyan-code> <i>an optional</i> number to display, auto incremented on pressed-state.</p>
      <p><cyan-code>on</cyan-code> a shorthand prop for button:aria-pressed.</p>

    </article>

    <!-- END FILE -->
  </main>
</Layout>