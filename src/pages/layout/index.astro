---
import CyanNavigationTray from '../../components/CyanNavigationTray.astro';
import Layout from '../../layouts/Layout.astro';
import Container from '../../content/layout/index/container.astro';
---

<Layout title="Cyan: App Layout">
  <main>
    <div class="container">
      <article class="column small">
        <cn-card 
          elevation="0"
          noun="font"
          title="App Layout"
          snippet="Cyan comes with a set of app-layout classes and elements - to build a Material design inspired PWA -skeleton."
        />
      </article>
      <article class="column auto wd-large">
        <h1>Layout</h1>
        <p>The Cyan design system supports three distinct srcreen modes, and all of the layout components are designed
          to gracefully adapt to the screen size.</p>
        <p>Screen sizes are: </p>

        <table>
          <thead>
            <tr>
              <th>Screen size</th>
              <th colspan="2">Width</th>
              <th>CSS prefix (1</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>Mobile (extra small)</td>
              <td>0px</td>
              <td>620px</td>
              <td><cyan-code>{'xs-*'}</cyan-code></td>
            </tr>
            <tr>
              <td>Small</td>
              <td>621px</td>
              <td>960px</td>
              <td><cyan-code>{'sm-*'}</cyan-code></td>
            </tr>
            <tr>
              <td>Medium</td>
              <td>961px</td>
              <td>1120px</td>
              <td><cyan-code>{'md-*'}</cyan-code></td>
            </tr>
            <tr>
              <td>Wide</td>
              <td>1121px</td>
              <td>âˆž</td>
              <td><cyan-code>{'wd-*'}</cyan-code></td>
            </tr>
          </tbody>
        </table>

        <p class="downscaled">1) The styles and atomics with the prefix target only the given screensize. 
          F.ex. the span between the brackets here is 
          <cyan-code>{'<span class="sm-display-none">hidden on mobile</span>'}</cyan-code>: 
          [<span class="sm-display-none">hidden on mobile</span>].</p>

        <p>Some app layout elements behave differently in different srceen sizes.</p>

        <table>
          <thead>
            <tr>
              <th>Component</th>
              <th>Small</th>
              <th>Medium</th>
              <th>Wide</th>
              <th>Notes</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                <cyan-code>{'<nav class="rail">'}</cyan-code>
              </td>
              <td>Hidden</td>
              <td>Fixed</td>
              <td>Fixed</td>
            </tr>
            <tr>
              <td>
                <cyan-code>{'<cn-tray-button />'}</cyan-code>
              </td>
              <td>Visible</td>
              <td>Visible</td>
              <td>Visible</td>
              <td class="TypeBody2 italic">You might want to have the tray button twice in the app scaffold: 
                a copy with <cyan-code>{'class="sm-display-none"'}</cyan-code> and the second with
                <cyan-code>{'class="md-display-none wd-display-none"'}</cyan-code></td>
            </tr>
          </tbody>
        </table>

      </article>
    </div>

    <Container />

    <!--div class="bookLayout">
    <article class="Column">
        <h3>Core concepts</h3>

        <p>The App layout is build on 4 core concepts</p>
        <ul>
          <li>
            Mobile nav-bar element <cyan-code>{'<cyan-navigation-bar>'}</cyan-code>, which is visible on mobile devices.
          </li>
          <li>
            Pad/Desktop nav-rail element <cyan-code>{'<cyan-navigation-rail>'}</cyan-code>, which is visible on pad and desktop devices.
          </li>
          <li>
             A helper class <cyan-code>.AppLayout</cyan-code>, that is used to fit the nav-bar and nav-rail elements on the page.
          </li>
          <li>
            Layout classes <cyan-code>.bookLayout</cyan-code> / <cyan-code>.dashboardLayout</cyan-code> /
            <cyan-code>.singleColumnLayout</cyan-code>, that are used to fit the content on the page.
          </li>
        </ul>
        <h3>Layout classes and grid</h3>
        <p><a href="/layout/layout-classes">See more here...</a></p>
      </article>

      <article class="Column small">
        <cyan-card elevation="1">
          <h4>Fitting</h4>
          <p>A base layout should fit on a desktop</p>
          <ul>
            <li>Rail</li>
            <li>Tray</li>
            <li>Content: .Column, .Column.small, .Column.small</li>
          </ul>
        </cyan-card>
      </article>

      <article class="Column small">
        <h2>Z-index</h2>
        <pre>
          // Z-index
  --cyan-z-index-base: 1000
  --cyan-z-index-navigation: calc( 10 *  var(--cyan-z-index-base) )
  --cyan-z-index-tray: calc( 20 *  var(--cyan-z-index-base) )
  // Rail is on top of the tray, to enable tray to slide under the rail
  --cyan-z-index-rail: calc( 30 *  var(--cyan-z-index-base) ) 
  // Dialog is on top of everything except snack
  --cyan-z-index-dialog: calc( 90 *  var(--cyan-z-index-base) )
  // Snack is on top of everything
  --cyan-z-index-snack: calc( 100 *  var(--cyan-z-index-base) ) 
        </pre>
      </article>
    </div>  


    <div class="bookLayout">
      <CyanNavigationTray />
    </div>
    <!- -cn-side-sheet>
      <h3>A side sheet</h3>
    </cn-side-sheet-->
  </main>
</Layout>      